# Generated by Django 4.2.9 on 2024-04-08 06:10

from django.db import migrations, models


def unite_detail_duplicates(apps, schema_editor):
    Detail = apps.get_model("core", "Detail")

    details = Detail.objects.all()

    details_by_name = dict()

    for detail in details:
        if detail.name not in details_by_name:
            details_by_name[detail.name] = []
        details_by_name[detail.name].append(detail)

    for key, value in details_by_name.items():
        if len(value) > 1:
            print(f"Detail {key} has duplicates:")
            print(f"{value[0].pk}: {value[0]} will be saved")
            for detail in value[1:]:
                print(f"    {detail.pk}: {detail} will be merged with {value[0].pk}")
                # replace detail with value[0]
                detail.orderentry_set.update(detail=value[0])
                detail.reportentry_set.update(detail=value[0])
                detail.planentry_set.update(detail=value[0])
                detail.delete()


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(unite_detail_duplicates, migrations.RunPython.noop),
        migrations.AlterField(
            model_name="detail",
            name="name",
            field=models.CharField(max_length=200, unique=True),
        ),
    ]
